import datetime
import os

from openpyxl.styles import Font, PatternFill, Border, Side, Alignment

from schemas.reports import OperationWithJobs
from utils.date_time_service import convert_date_time
from utils.translator import translator as t
import pandas as pd


async def individual_mechanic_excel_report(operations: list[OperationWithJobs], mechanic_username: str,
                                           start_date: datetime.datetime, end_date: datetime.datetime,
                                           report_type: str, lang: str) -> str:
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è excel –æ—Ç—á–µ—Ç–∞. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É"""
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
    os.makedirs("reports", exist_ok=True)

    # –¶–≤–µ—Ç–∞
    COLOR_DARK_BLUE = "203764"  # –¢–µ–º–Ω–æ-—Å–∏–Ω–∏–π —Ç–µ–∫—Å—Ç
    COLOR_LIGHT_BLUE = "D9E1F2"  # –°–≤–µ—Ç–ª–æ-—Å–∏–Ω–∏–π —Ñ–æ–Ω
    COLOR_LIGHT_GREEN = "E2EFDA"  # –°–≤–µ—Ç–ª–æ-–∑–µ–ª–µ–Ω—ã–π —Ñ–æ–Ω
    COLOR_LIGHT_YELLOW = "FFF2CC"  # –°–≤–µ—Ç–ª–æ-–∂–µ–ª—Ç—ã–π —Ñ–æ–Ω
    COLOR_LIGHT_RED = "FFCCCC"  # –°–≤–µ—Ç–ª–æ-–∫—Ä–∞—Å–Ω—ã–π —Ñ–æ–Ω
    COLOR_LIGHT_GRAY = "F2F2F2"  # –°–≤–µ—Ç–ª–æ-—Å–µ—Ä—ã–π —Ñ–æ–Ω
    COLOR_WHITE = "FFFFFF"  # –ë–µ–ª—ã–π —Ñ–æ–Ω

    # –°—Ç–∏–ª–∏ –≥—Ä–∞–Ω–∏—Ü
    BORDER_STYLE_THIN = "thin"
    BORDER_STYLE_MEDIUM = "medium"

    # –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ
    ALIGN_CENTER = "center"
    ALIGN_LEFT = "left"
    ALIGN_RIGHT = "right"

    # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É Excel –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –æ—Ç—á–µ—Ç–∞
    start_date = convert_date_time(start_date, with_tz=True)[0]
    end_date = convert_date_time(end_date, with_tz=True)[0]
    excel_path = f"reports/{report_type}_{start_date}_{end_date}.xlsx"
    sheet_name = "mechanic_report"
    title = f"üìÜ {await t.t(report_type, lang)} {start_date} - {end_date} {mechanic_username}"

    data = []

    columns = [
        "ID",
        await t.t('excel_date', lang),
        await t.t('excel_time', lang),
        await t.t('excel_transport', lang),
        await t.t('excel_jobtype', lang),
        await t.t('excel_jobs', lang),
        await t.t('excel_comment', lang),
        await t.t('excel_avg_time', lang)]
    data.append(columns)

    # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    for operation in operations:
        for job in operation.jobs:
            data.append(
                [
                    # ID
                    f"{operation.id}",
                    # –¥–∞—Ç–∞
                    f"{convert_date_time(operation.created_at, with_tz=True)[0]}",
                    # –≤—Ä–µ–º—è –Ω–∞ —Ä–∞–±–æ—Ç—É == —Å—Ä–µ–¥–Ω–µ–º—É –ø–æ—Ç–æ–º—É —á—Ç–æ –Ω–∞ –∫–∞–∂–¥—É—é –æ–ø–µ—Ä–∞—Ü–∏—é –æ—Ç–¥–µ–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
                    f"{round(operation.duration / len(operation.jobs))}",
                    # —Ç—Ä–∞—Å–ø–æ—Ä—Ç —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π –∏ –Ω–æ–º–µ—Ä–æ–º
                    f"{await t.t(operation.transport_category, lang)} {operation.transport_subcategory}-{operation.transport_serial_number}",
                    # –≥—Ä—É–ø–ø–∞ —É–∑–ª–æ–≤
                    f"{await t.t(operation.jobs[0].jobtype_title, lang)}",
                    # —Ä–∞–±–æ—Ç—ã
                    f"{await t.t(job.title, lang)}",
                    # –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
                    f"{operation.comment if operation.comment else '-'}",
                    # —Å—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –Ω–∞ —Ä–∞–±–æ—Ç—É
                    f"{round(operation.duration / len(operation.jobs))}"
                ]
            )

    # –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –º–µ–∂–¥—É —Ä–∞–∑–¥–µ–ª–∞–º–∏
    data.append(["", "", "", "", "", "", "", ""])

    jobs_count = sum([len(operation.jobs) for operation in operations])
    duration_sum = str(sum([operation.duration for operation in operations]))
    # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—Ç
    data.append([f"{await t.t('number_of_works', lang)}", "", f"{jobs_count}"])
    # –æ–±—â–µ–µ –≤—Ä–µ–º—è –Ω–∞ —Ä–∞–±–æ—Ç—ã
    data.append([f"{await t.t('total_time_spent', lang)}", "", f"{duration_sum} {await t.t('minutes', lang)}"])

    # –°–æ–∑–¥–∞–µ–º DataFrame —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
    df = pd.DataFrame(data)

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ Excel
    with pd.ExcelWriter(excel_path, engine='openpyxl') as writer:
        df.to_excel(writer, sheet_name=sheet_name, index=False)

        # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        workbook = writer.book
        worksheet = writer.sheets[sheet_name]

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à–∏—Ä–∏–Ω—ã —Å—Ç–æ–ª–±—Ü–æ–≤
        worksheet.column_dimensions['A'].width = 15
        worksheet.column_dimensions['B'].width = 20
        worksheet.column_dimensions['C'].width = 15
        worksheet.column_dimensions['D'].width = 25
        worksheet.column_dimensions['E'].width = 35
        worksheet.column_dimensions['F'].width = 45
        worksheet.column_dimensions['G'].width = 40
        worksheet.column_dimensions['H'].width = 20

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç—á–µ—Ç–∞ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
        title_cell = worksheet.cell(row=1, column=1)
        title_cell.value = title
        title_cell.font = Font(bold=True, size=14, color=COLOR_DARK_BLUE)  # –¢–µ–º–Ω–æ-—Å–∏–Ω–∏–π —Ç–µ–∫—Å—Ç

        # –æ–±—ä–µ–¥–∏–Ω—è–µ–º –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
        worksheet.merge_cells('A1:H1')

        # –¥–µ–ª–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ —Ü–µ–Ω—Ç—Ä—É
        title_cell.alignment = Alignment(horizontal=ALIGN_CENTER)

        # –î–æ–±–∞–≤–ª—è–µ–º —Å–≤–µ—Ç–ª–æ-—Å–∏–Ω–∏–π —Ñ–æ–Ω –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
        title_cell.fill = PatternFill(start_color=COLOR_LIGHT_BLUE, end_color=COLOR_LIGHT_BLUE, fill_type="solid")

        # –î–æ–±–∞–≤–ª—è–µ–º –≥—Ä–∞–Ω–∏—Ü—É –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
        title_cell.border = Border(
            left=Side(style=BORDER_STYLE_MEDIUM),
            right=Side(style=BORDER_STYLE_MEDIUM),
            top=Side(style=BORDER_STYLE_MEDIUM),
            bottom=Side(style=BORDER_STYLE_MEDIUM)
        )

        # –¥–µ–ª–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫ –ø–æ —Ü–µ–Ω—Ç—Ä—É –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≥—Ä–∞–Ω–∏—Ü—ã
        for i in range(8):
            column_cell = worksheet.cell(row=2, column=i+1)
            column_cell.alignment = Alignment(horizontal=ALIGN_CENTER)
            column_cell.border = Border(
                left=Side(style=BORDER_STYLE_THIN),
                right=Side(style=BORDER_STYLE_THIN),
                bottom=Side(style=BORDER_STYLE_THIN)
            )

    return excel_path
